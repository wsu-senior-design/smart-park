{"ast":null,"code":"var _jsxFileName = \"/Users/tuan/smart-park/website/Website Container/frontend-t/src/components/data_comp/PowerCompChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { PCUserData } from \"./ChartData\"; // eslint-disable-next-line no-unused-vars\n\nimport { Chart as ChartJS } from \"chart.js/auto\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BarChart(_ref) {\n  let {\n    chartData\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Bar, {\n    data: chartData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n_c = BarChart;\n\nfunction PowerCompChart() {\n  _s();\n\n  const [userData] = useState({\n    labels: PCUserData.map(data => data.Day),\n    datasets: [{\n      label: \"Spot #1: Power Consumption\",\n      data: PCUserData.map(data => data.Power),\n      backgroundColor: [\"rgba(75,192,192,1)\", \"#ecf0f1\", \"#50AF95\", \"#f3ba2f\", \"#2a71d0\"],\n      borderColor: \"black\",\n      borderWidth: 2\n    }]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: 700\n      },\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        chartData: userData,\n        options: {\n          title: {\n            display: true,\n            text: 'Power Consumption',\n            fontSize: 20\n          },\n          scales: {\n            x: [{\n              title: {\n                display: true,\n                text: 'Days'\n              }\n            }],\n            y: {\n              title: {\n                display: true,\n                text: 'Total Time Filled (minutes)'\n              }\n            }\n          },\n          legend: {\n            display: true,\n            position: 'right'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PowerCompChart, \"PVzIvydCIaAVpFoeT+2NNeQQ650=\");\n\n_c2 = PowerCompChart;\nexport default PowerCompChart;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"BarChart\");\n$RefreshReg$(_c2, \"PowerCompChart\");","map":{"version":3,"names":["React","useState","Bar","PCUserData","Chart","ChartJS","BarChart","chartData","PowerCompChart","userData","labels","map","data","Day","datasets","label","Power","backgroundColor","borderColor","borderWidth","width","title","display","text","fontSize","scales","x","y","legend","position"],"sources":["/Users/tuan/smart-park/website/Website Container/frontend-t/src/components/data_comp/PowerCompChart.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Bar } from \"react-chartjs-2\";\nimport { PCUserData } from \"./ChartData\";\n// eslint-disable-next-line no-unused-vars\nimport { Chart as ChartJS } from \"chart.js/auto\";\n\nfunction BarChart({ chartData }) {\n  return <Bar data={chartData} />;\n}\n\nfunction PowerCompChart() {\n  const [userData] = useState({\n    labels: PCUserData.map((data) => data.Day),\n    datasets: [\n      {\n        label: \"Spot #1: Power Consumption\",\n        data: PCUserData.map((data) => data.Power),\n        backgroundColor: [\n          \"rgba(75,192,192,1)\",\n          \"#ecf0f1\",\n          \"#50AF95\",\n          \"#f3ba2f\",\n          \"#2a71d0\",\n        ],\n        borderColor: \"black\",\n        borderWidth: 2,\n      },\n    ],\n  });\n\n  \n  return (\n    <div>\n      <div style={{ width: 700 }}>\n        <BarChart chartData={userData} \n        options={{\n          title:{\n            display:true,\n            text:'Power Consumption',\n            fontSize:20\n          },\n          scales: {\n            x: [{\n              title: {\n                display: true,\n                text: 'Days'             \n              } \n            }],\n            y:{\n              title: {\n                  display: true,\n                  text: 'Total Time Filled (minutes)',        \n              }         \n            }         \n          },\n          legend:{\n            display:true,\n            position:'right'\n          }\n        }}\n        />\n      </div>\n    \n    </div>\n  );\n}\n\nexport default PowerCompChart;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,UAAT,QAA2B,aAA3B,C,CACA;;AACA,SAASC,KAAK,IAAIC,OAAlB,QAAiC,eAAjC;;;AAEA,SAASC,QAAT,OAAiC;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC/B,oBAAO,QAAC,GAAD;IAAK,IAAI,EAAEA;EAAX;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;KAFQD,Q;;AAIT,SAASE,cAAT,GAA0B;EAAA;;EACxB,MAAM,CAACC,QAAD,IAAaR,QAAQ,CAAC;IAC1BS,MAAM,EAAEP,UAAU,CAACQ,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACC,GAA9B,CADkB;IAE1BC,QAAQ,EAAE,CACR;MACEC,KAAK,EAAE,4BADT;MAEEH,IAAI,EAAET,UAAU,CAACQ,GAAX,CAAgBC,IAAD,IAAUA,IAAI,CAACI,KAA9B,CAFR;MAGEC,eAAe,EAAE,CACf,oBADe,EAEf,SAFe,EAGf,SAHe,EAIf,SAJe,EAKf,SALe,CAHnB;MAUEC,WAAW,EAAE,OAVf;MAWEC,WAAW,EAAE;IAXf,CADQ;EAFgB,CAAD,CAA3B;EAoBA,oBACE;IAAA,uBACE;MAAK,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAT,CAAZ;MAAA,uBACE,QAAC,QAAD;QAAU,SAAS,EAAEX,QAArB;QACA,OAAO,EAAE;UACPY,KAAK,EAAC;YACJC,OAAO,EAAC,IADJ;YAEJC,IAAI,EAAC,mBAFD;YAGJC,QAAQ,EAAC;UAHL,CADC;UAMPC,MAAM,EAAE;YACNC,CAAC,EAAE,CAAC;cACFL,KAAK,EAAE;gBACLC,OAAO,EAAE,IADJ;gBAELC,IAAI,EAAE;cAFD;YADL,CAAD,CADG;YAONI,CAAC,EAAC;cACAN,KAAK,EAAE;gBACHC,OAAO,EAAE,IADN;gBAEHC,IAAI,EAAE;cAFH;YADP;UAPI,CAND;UAoBPK,MAAM,EAAC;YACLN,OAAO,EAAC,IADH;YAELO,QAAQ,EAAC;UAFJ;QApBA;MADT;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD;;GAvDQrB,c;;MAAAA,c;AAyDT,eAAeA,cAAf"},"metadata":{},"sourceType":"module"}